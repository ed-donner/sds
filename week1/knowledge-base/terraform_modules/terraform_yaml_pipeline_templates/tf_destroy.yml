parameters:
  container_name:
  container_key:
  environment_name:
  tfvarFile:
  root_directory:
  service_connection_name:
  backend_resource_group:
  backend_storage_accountname:
  terraformVersion:

steps:
  - download: none

  - task: DownloadBuildArtifacts@0
    displayName: 'Downloading ${{ parameters.environment_name }} Artifacts'
    inputs:
      buildType: 'current'
      downloadType: 'single'
      artifactName: ${{ parameters.environment_name }}
      downloadPath: '$(System.ArtifactsDirectory)'
        
  - task: AzureKeyVault@2
    inputs:
      azureSubscription: ${{ parameters.service_connection_name }} # Azure Resource Manager service connection from frontend
      keyVaultName: 'axso-prod-appl-tim-kv'
      secretsFilter: '*'
      runAsPreJob: true 

  - task: InstallSSHKey@0
    inputs:
      knownHostsEntry: $(terraform-git-ssh-known-hosts) # Known hosts entry for the git repository from key vault
      sshPublicKey: $(terraform-git-ssh-pub) # Public key for the git repository from key vault
      sshPassphrase: $(terraform-git-ssh-passphrase) # Passphrase for the git repository from key vault
      sshKeySecureFile: 'terraform_rsa'

  - task: TerraformInstaller@1
    inputs:
      terraformVersion: ${{ parameters.terraformVersion }}

  - task: TerraformTaskV4@4
    displayName: Terraform Init
    inputs:
      provider: 'azurerm'
      command: 'init'
      workingDirectory: "$(System.ArtifactsDirectory)/${{ parameters.environment_name }}${{ parameters.root_directory }}"
      backendServiceArm: ${{ parameters.service_connection_name }}
      backendAzureRmResourceGroupName: ${{ parameters.backend_resource_group }}
      backendAzureRmStorageAccountName: ${{ parameters.backend_storage_accountname }}
      backendAzureRmContainerName: ${{ parameters.container_name }}
      backendAzureRmKey: ${{ parameters.container_key }}
    env:
      ARM_USE_AZUREAD: true

  - task: TerraformTaskV4@4
    displayName: Terraform Destroy
    inputs:
      provider: 'azurerm'
      command: 'destroy'
      workingDirectory: "$(System.ArtifactsDirectory)/${{ parameters.environment_name }}${{ parameters.root_directory }}"
      commandOptions: "--input=false --var-file=$(System.ArtifactsDirectory)/${{ parameters.environment_name }}${{ parameters.root_directory }}${{ parameters.tfvarFile }}"
      environmentServiceNameAzureRM: ${{ parameters.service_connection_name }}
    env:
      ARM_USE_AZUREAD: true