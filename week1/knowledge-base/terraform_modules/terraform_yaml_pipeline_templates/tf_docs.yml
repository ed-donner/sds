parameters:
  terraform_docs_version:
  pool:

jobs:
  - job: Terraform_Docs
    pool: ${{ parameters.pool }}
    workspace:
        clean: all

    steps:
      - checkout: self
        persistCredentials: true
        path: src

      - checkout: Terraform_Deployment_Pipeline
        persistCredentials: true
        path: terraform_yaml_pipeline_templates         
        condition: eq(variables['System.TeamProject'], 'TIM-INFRA-MODULES')          

      ### Install Terraform-Docs.
      - powershell: |
          Invoke-WebRequest -Uri "https://github.com/terraform-docs/terraform-docs/releases/download/v${{ parameters.terraform_docs_version }}/terraform-docs-v${{ parameters.terraform_docs_version }}-windows-amd64.zip" -OutFile "terraform-docs.zip"
          Expand-Archive -Path "terraform-docs.zip" -DestinationPath "$(System.DefaultWorkingDirectory)\Terraform-Docs" -Force
          $env:Path += ";$(System.DefaultWorkingDirectory)\terraform-docs"
        displayName: 'Install terraform-docs Windows'
        condition: startswith(variables['Agent.OS'], 'Windows')  
        workingDirectory: '$(Agent.BuildDirectory)/src'    

      ### Install Terraform-Docs.
      - script: |
          cd $(Agent.TempDirectory)
          curl -sSLo ./terraform-docs.tar.gz https://terraform-docs.io/dl/v${{ parameters.terraform_docs_version }}/terraform-docs-v${{ parameters.terraform_docs_version }}-$(uname)-amd64.tar.gz
          tar -xzf terraform-docs.tar.gz
          chmod +x terraform-docs
        displayName: 'Install terraform-docs Linux'
        condition: eq(variables['Agent.OS'], 'Linux')      


      ### update README.md files and generate new README.md files for each TF module.
      - powershell: |
          ls
          cd ./Tests
          $(System.DefaultWorkingDirectory)\Terraform-Docs\terraform-docs.exe markdown table . --output-file README.md
          cd ..
          $(System.DefaultWorkingDirectory)\Terraform-Docs\terraform-docs.exe . --output-file "README.md" -c $(Agent.BuildDirectory)/terraform_yaml_pipeline_templates/.azuredevops/terraform-docs/.terraform-docs.yml
          
        displayName: 'Check and update README files for TF modules'
        condition: startswith(variables['Agent.OS'], 'Windows')
        workingDirectory: '$(Agent.BuildDirectory)/src'            


      ### update README.md files and generate new README.md files for each TF module.
      - bash: |
          cat $(Agent.BuildDirectory)/terraform_yaml_pipeline_templates/.azuredevops/terraform-docs/.terraform-docs.yml
          ls
          ls ./Tests
          cd ./Tests
          $(Agent.TempDirectory)/terraform-docs markdown table . --output-file README.md
          cd ..
          $(Agent.TempDirectory)/terraform-docs . --output-file README.md -c $(Agent.BuildDirectory)/terraform_yaml_pipeline_templates/.azuredevops/terraform-docs/.terraform-docs.yml
        displayName: 'Check and update README files for TF modules'
        condition: eq(variables['Agent.OS'], 'Linux')
        workingDirectory: '$(Agent.BuildDirectory)/src'        
    

      ### Commit and push updated README.md files for TF modules.
      - powershell: |
          git config --local user.email "terraform-docs@axpo.com"
          git config --local user.name "Terraform Docs"
          git pull origin $(Build.SourceBranch)
          git add ./README.md
          git add ./Examples/README.md
          git add ./Tests/README.md
          git commit -m "Update README.md for each TF module"
          git push origin HEAD:$(Build.SourceBranch)
        displayName: 'Commit and Push updated README.md files for TF modules'
        workingDirectory: '$(Agent.BuildDirectory)/src'        
        env:
          SYSTEM_ACCESSTOKEN: $(System.AccessToken)